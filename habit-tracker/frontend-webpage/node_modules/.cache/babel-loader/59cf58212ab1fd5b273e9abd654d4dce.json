{"ast":null,"code":"var _jsxFileName = \"/Users/saharabid/Habit-tracker/habit-tracker/frontend-webpage/src/components/Reminders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminders = () => {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  const [reminder, setReminder] = useState('');\n  const addReminder = () => {\n    if (reminder.trim()) {\n      setReminders([...reminders, {\n        text: reminder,\n        completed: false\n      }]);\n      setReminder('');\n    }\n  };\n  const toggleReminderCompletion = index => {\n    setReminders(reminders.map((r, i) => i === index ? {\n      ...r,\n      completed: !r.completed\n    } : r));\n  };\n  const removeReminder = index => {\n    setReminders(reminders.filter((_, i) => i !== index));\n  };\n  useEffect(() => {\n    const savedReminders = localStorage.getItem('myReminders');\n    if (savedReminders) {\n      setReminders(JSON.parse(savedReminders));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('myReminders', JSON.stringify(reminders));\n  }, [reminders]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reminder-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: reminder,\n      onChange: e => setReminder(e.target.value),\n      placeholder: \"Add a new reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addReminder,\n      children: \"Add Reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reminders.map((r, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: r.completed ? 'line-through' : 'none'\n        },\n        children: [r.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleReminderCompletion(index),\n          children: r.completed ? 'Undo' : 'Complete'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeReminder(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Reminders, \"xzHnViBd24VGEHOsJqiVwl3yIF0=\");\n_c = Reminders;\nexport default Reminders;\n\n/*const Reminders = () => {\n    const reminders = [\n        { id: 1, text: 'Doctor appointment at 3 PM', href: '#' },\n        { id: 2, text: 'Meeting with team at 10 AM', href: '#' },\n        { id: 3, text: 'Grocery shopping', href: '#' },\n        { id: 4, text: 'Call mom', href: '#' },\n    ];\n\n    return (\n        <div>\n            <h2>Reminders</h2>\n            <ul>\n                {reminders.map(reminder => (\n                    <li key={reminder.id}>\n                        <a href={reminder.href}>{reminder.text}</a>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}; */\nvar _c;\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Reminders","_s","reminders","setReminders","reminder","setReminder","addReminder","trim","text","completed","toggleReminderCompletion","index","map","r","i","removeReminder","filter","_","savedReminders","localStorage","getItem","JSON","parse","setItem","stringify","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","textDecoration","_c","$RefreshReg$"],"sources":["/Users/saharabid/Habit-tracker/habit-tracker/frontend-webpage/src/components/Reminders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Reminders = () => {\n  const [reminders, setReminders] = useState([]);\n  const [reminder, setReminder] = useState('');\n\n  const addReminder = () => {\n    if (reminder.trim()) {\n      setReminders([...reminders, { text: reminder, completed: false }]);\n      setReminder('');\n    }\n  };\n\n  const toggleReminderCompletion = (index) => {\n    setReminders(reminders.map((r, i) =>\n      i === index ? { ...r, completed: !r.completed } : r\n    ));\n  };\n\n  const removeReminder = (index) => {\n    setReminders(reminders.filter((_, i) => i !== index));\n  };\n\n  useEffect(() => {\n    const savedReminders = localStorage.getItem('myReminders');\n    if (savedReminders) {\n      setReminders(JSON.parse(savedReminders));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('myReminders', JSON.stringify(reminders));\n  }, [reminders]);\n\n  return (\n    <div className=\"reminder-container\">\n      <input\n        type=\"text\"\n        value={reminder}\n        onChange={(e) => setReminder(e.target.value)}\n        placeholder=\"Add a new reminder\"\n      />\n      <button onClick={addReminder}>Add Reminder</button>\n\n      <ul>\n        {reminders.map((r, index) => (\n          <li\n            key={index}\n            style={{ textDecoration: r.completed ? 'line-through' : 'none' }}\n          >\n            {r.text}\n            <button onClick={() => toggleReminderCompletion(index)}>\n              {r.completed ? 'Undo' : 'Complete'}\n            </button>\n            <button onClick={() => removeReminder(index)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reminders;\n    \n\n\n\n\n\n/*const Reminders = () => {\n    const reminders = [\n        { id: 1, text: 'Doctor appointment at 3 PM', href: '#' },\n        { id: 2, text: 'Meeting with team at 10 AM', href: '#' },\n        { id: 3, text: 'Grocery shopping', href: '#' },\n        { id: 4, text: 'Call mom', href: '#' },\n    ];\n\n    return (\n        <div>\n            <h2>Reminders</h2>\n            <ul>\n                {reminders.map(reminder => (\n                    <li key={reminder.id}>\n                        <a href={reminder.href}>{reminder.text}</a>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}; */ "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}